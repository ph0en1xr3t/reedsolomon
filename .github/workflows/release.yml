name: Release

on:
  push:
    tags:
      - 'v*'

env:
  BUILD_TYPE: Release

jobs:
  build-and-package:
    name: Build and Package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            artifact_name: reedsolomon-linux-x64
            cc: gcc
            cxx: g++
          - os: ubuntu-22.04
            artifact_name: reedsolomon-linux-x64-ubuntu22
            cc: gcc
            cxx: g++
          - os: macos-latest
            artifact_name: reedsolomon-macos-x64
            cc: clang
            cxx: clang++

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake make build-essential

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: brew install cmake

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
          -DCMAKE_C_COMPILER=${{ matrix.cc }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
          -DBUILD_EXAMPLES=ON \
          -DBUILD_TESTS=OFF \
          -DCMAKE_INSTALL_PREFIX=install

    - name: Build
      run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel

    - name: Install
      run: cmake --install build --config ${{ env.BUILD_TYPE }}

    - name: Package
      run: |
        mkdir -p package/${{ matrix.artifact_name }}
        cp -r install/* package/${{ matrix.artifact_name }}/
        cp README.md LICENSE.md package/${{ matrix.artifact_name }}/
        cd package
        tar -czf ${{ matrix.artifact_name }}-${{ steps.version.outputs.VERSION }}.tar.gz ${{ matrix.artifact_name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: package/${{ matrix.artifact_name }}-${{ steps.version.outputs.VERSION }}.tar.gz

  create-release:
    name: Create Release
    needs: build-and-package
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog for this version
          awk "/^## \[${{ steps.version.outputs.VERSION }}\]/{flag=1; next} /^## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
        else
          echo "Release ${{ steps.version.outputs.VERSION }}" > release_notes.md
          echo "" >> release_notes.md
          echo "## Changes" >> release_notes.md
          echo "See commit history for detailed changes." >> release_notes.md
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ steps.version.outputs.VERSION }}
        body_path: release_notes.md
        files: |
          */reedsolomon-*-${{ steps.version.outputs.VERSION }}.tar.gz
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: build-and-package

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: .devcontainer/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}
        platforms: linux/amd64,linux/arm64